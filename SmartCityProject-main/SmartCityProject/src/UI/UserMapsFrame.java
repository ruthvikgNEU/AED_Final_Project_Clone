/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import com.teamdev.jxbrowser.browser.Browser;
import com.teamdev.jxbrowser.engine.Engine;
import com.teamdev.jxbrowser.engine.EngineOptions;
import static com.teamdev.jxbrowser.engine.RenderingMode.HARDWARE_ACCELERATED;
import com.teamdev.jxbrowser.view.swing.BrowserView;
import java.awt.BorderLayout;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.SwingUtilities;

/**
 *
 * @author Ruthvik Garlapati
 */
public class UserMapsFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserMapsFrame
     */
     Connection connection;
    String user;
 private static final int MIN_ZOOM = 0;
 private static final int MAX_ZOOM = 21;
 private static int zoomValue = 5;
    public UserMapsFrame(Connection connection,String name) {
        initComponents();
         this.connection = connection;
         this.user = name;
         //UsernameLabel.setText(user + "!!");
   getMarkers();
   open_site();
    }
String str = "";

    private UserMapsFrame() {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    private void getMarkers(){
        
        try {
                    PreparedStatement st = (PreparedStatement)connection.prepareStatement("select * from my_applications where username = ?");
                    st.setString(1, user);
                    ResultSet rs2 = st.executeQuery();
                    while(rs2.next()){
                    str += "["+"'"+rs2.getString("message")+" "+rs2.getString("enterprise")+"'"+","+rs2.getString("lat")+","+rs2.getString("lon")+",4],\n";
                    }
                    System.out.println(str);
             
                } catch (HeadlessException | SQLException sqlException) {
                    sqlException.printStackTrace();
                } 
    }
 private void open_site() {
   String fourth = "var marker, i;\n\nfor (i = 0; i < locations.length; i++) {  \n  marker = new google.maps.Marker({\n\tposition: new google.maps.LatLng(locations[i][1], locations[i][2]),\n\tmap: map,\n\tlabel: locations[i][0], \n\toptimized: true\n });\n}";
   String first = "var locations = [\n";
   String third = "];\n";
   //String second = "['Booking 1', -33.890542, 151.274856, 4],\n['Booking 2', -33.923036, 151.259052, 5]\n";
   String setMarkerScript = first + str + third + fourth;
   EngineOptions options =
     EngineOptions.newBuilder(HARDWARE_ACCELERATED).licenseKey("1BNDHFSC1G4NNJSWIB7FX6CBOWWCX8MKR14WNT2DH9XV6YW9EOWTXHCOQSIKV88D6J65JS").build();
   Engine engine = Engine.newInstance(options);
   Browser browser = engine.newBrowser();
   SwingUtilities.invokeLater(() -> {
     BrowserView view = BrowserView.newInstance(browser);
     browser.mainFrame().ifPresent(frame ->
       frame.executeJavaScript(setMarkerScript));
     ZoomIN.addActionListener(e -> {
       if (zoomValue < MAX_ZOOM) {
         browser.mainFrame().ifPresent(frame ->
           frame.executeJavaScript("map.setZoom(" +
             ++zoomValue + ")"));
       }
     });
     ZoomOut.addActionListener(e -> {
       if (zoomValue > MIN_ZOOM) {
         browser.mainFrame().ifPresent(frame ->
           frame.executeJavaScript("map.setZoom(" +
             --zoomValue + ")"));
       }
     });
     setMarkers.addActionListener(e ->
       browser.mainFrame().ifPresent(frame ->
         frame.executeJavaScript(setMarkerScript)));
     MapsPanel.add(view, BorderLayout.CENTER);
     String rootPath = System.getProperty("user.dir");
     browser.navigation().loadUrl("D:/NEU_JAVA_WORKSPACE/JavaSwingHospitalApplication/TestingProject/build/classes/Libraries/simple_map.html");
   });
 }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ZoomIN = new javax.swing.JButton();
        ZoomOut = new javax.swing.JButton();
        setMarkers = new javax.swing.JButton();
        MapsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ZoomIN.setText("Zoom In");
        ZoomIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoomINActionPerformed(evt);
            }
        });

        ZoomOut.setText("Zoom Out");

        setMarkers.setText("Show Markers");

        MapsPanel.setLayout(new javax.swing.BoxLayout(MapsPanel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(ZoomIN, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165)
                .addComponent(ZoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(setMarkers, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(MapsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setMarkers, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ZoomIN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(718, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 108, Short.MAX_VALUE)
                    .addComponent(MapsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ZoomINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoomINActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZoomINActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserMapsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserMapsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserMapsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserMapsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMapsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MapsPanel;
    private javax.swing.JButton ZoomIN;
    private javax.swing.JButton ZoomOut;
    private javax.swing.JButton setMarkers;
    // End of variables declaration//GEN-END:variables
}
